/*
 * This file is generated by jOOQ.
 */
package com.example.peachapi.driver.peachdb.gen.tables;


import com.example.peachapi.driver.peachdb.gen.Keys;
import com.example.peachapi.driver.peachdb.gen.Public;
import com.example.peachapi.driver.peachdb.gen.tables.records.GoogleAuthenticationsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GoogleAuthentications extends TableImpl<GoogleAuthenticationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.google_authentications</code>
     */
    public static final GoogleAuthentications GOOGLE_AUTHENTICATIONS = new GoogleAuthentications();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GoogleAuthenticationsRecord> getRecordType() {
        return GoogleAuthenticationsRecord.class;
    }

    /**
     * The column <code>public.google_authentications.user_id</code>.
     */
    public final TableField<GoogleAuthenticationsRecord, UUID> USER_ID = createField(DSL.name("user_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.google_authentications.principal_id</code>.
     */
    public final TableField<GoogleAuthenticationsRecord, String> PRINCIPAL_ID = createField(DSL.name("principal_id"), SQLDataType.VARCHAR(225).nullable(false), this, "");

    /**
     * The column <code>public.google_authentications.mail_address</code>.
     */
    public final TableField<GoogleAuthenticationsRecord, String> MAIL_ADDRESS = createField(DSL.name("mail_address"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>public.google_authentications.created_at</code>.
     */
    public final TableField<GoogleAuthenticationsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.google_authentications.changed_at</code>.
     */
    public final TableField<GoogleAuthenticationsRecord, LocalDateTime> CHANGED_AT = createField(DSL.name("changed_at"), SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.google_authentications.deleted_at</code>.
     */
    public final TableField<GoogleAuthenticationsRecord, LocalDateTime> DELETED_AT = createField(DSL.name("deleted_at"), SQLDataType.LOCALDATETIME(6), this, "");

    private GoogleAuthentications(Name alias, Table<GoogleAuthenticationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GoogleAuthentications(Name alias, Table<GoogleAuthenticationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.google_authentications</code> table reference
     */
    public GoogleAuthentications(String alias) {
        this(DSL.name(alias), GOOGLE_AUTHENTICATIONS);
    }

    /**
     * Create an aliased <code>public.google_authentications</code> table reference
     */
    public GoogleAuthentications(Name alias) {
        this(alias, GOOGLE_AUTHENTICATIONS);
    }

    /**
     * Create a <code>public.google_authentications</code> table reference
     */
    public GoogleAuthentications() {
        this(DSL.name("google_authentications"), null);
    }

    public <O extends Record> GoogleAuthentications(Table<O> child, ForeignKey<O, GoogleAuthenticationsRecord> key) {
        super(child, key, GOOGLE_AUTHENTICATIONS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<GoogleAuthenticationsRecord> getPrimaryKey() {
        return Keys.GOOGLE_AUTHENTICATIONS_PKEY;
    }

    @Override
    public List<UniqueKey<GoogleAuthenticationsRecord>> getKeys() {
        return Arrays.<UniqueKey<GoogleAuthenticationsRecord>>asList(Keys.GOOGLE_AUTHENTICATIONS_PKEY, Keys.GOOGLE_AUTHENTICATIONS_PRINCIPAL_ID_KEY, Keys.GOOGLE_AUTHENTICATIONS_MAIL_ADDRESS_KEY);
    }

    @Override
    public List<ForeignKey<GoogleAuthenticationsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GoogleAuthenticationsRecord, ?>>asList(Keys.GOOGLE_AUTHENTICATIONS__GOOGLE_AUTHENTICATIONS_USER_ID_FKEY);
    }

    public Users users() {
        return new Users(this, Keys.GOOGLE_AUTHENTICATIONS__GOOGLE_AUTHENTICATIONS_USER_ID_FKEY);
    }

    @Override
    public GoogleAuthentications as(String alias) {
        return new GoogleAuthentications(DSL.name(alias), this);
    }

    @Override
    public GoogleAuthentications as(Name alias) {
        return new GoogleAuthentications(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GoogleAuthentications rename(String name) {
        return new GoogleAuthentications(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GoogleAuthentications rename(Name name) {
        return new GoogleAuthentications(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
