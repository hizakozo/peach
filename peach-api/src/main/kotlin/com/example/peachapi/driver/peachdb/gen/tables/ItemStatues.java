/*
 * This file is generated by jOOQ.
 */
package com.example.peachapi.driver.peachdb.gen.tables;


import com.example.peachapi.driver.peachdb.gen.Keys;
import com.example.peachapi.driver.peachdb.gen.Public;
import com.example.peachapi.driver.peachdb.gen.tables.records.ItemStatuesRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemStatues extends TableImpl<ItemStatuesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.item_statues</code>
     */
    public static final ItemStatues ITEM_STATUES = new ItemStatues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemStatuesRecord> getRecordType() {
        return ItemStatuesRecord.class;
    }

    /**
     * The column <code>public.item_statues.item_id</code>.
     */
    public final TableField<ItemStatuesRecord, UUID> ITEM_ID = createField(DSL.name("item_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.item_statues.status_id</code>.
     */
    public final TableField<ItemStatuesRecord, UUID> STATUS_ID = createField(DSL.name("status_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.item_statues.created_at</code>.
     */
    public final TableField<ItemStatuesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.item_statues.created_by</code>.
     */
    public final TableField<ItemStatuesRecord, UUID> CREATED_BY = createField(DSL.name("created_by"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.item_statues.changed_at</code>.
     */
    public final TableField<ItemStatuesRecord, LocalDateTime> CHANGED_AT = createField(DSL.name("changed_at"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.item_statues.changed_by</code>.
     */
    public final TableField<ItemStatuesRecord, UUID> CHANGED_BY = createField(DSL.name("changed_by"), SQLDataType.UUID.nullable(false), this, "");

    private ItemStatues(Name alias, Table<ItemStatuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemStatues(Name alias, Table<ItemStatuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.item_statues</code> table reference
     */
    public ItemStatues(String alias) {
        this(DSL.name(alias), ITEM_STATUES);
    }

    /**
     * Create an aliased <code>public.item_statues</code> table reference
     */
    public ItemStatues(Name alias) {
        this(alias, ITEM_STATUES);
    }

    /**
     * Create a <code>public.item_statues</code> table reference
     */
    public ItemStatues() {
        this(DSL.name("item_statues"), null);
    }

    public <O extends Record> ItemStatues(Table<O> child, ForeignKey<O, ItemStatuesRecord> key) {
        super(child, key, ITEM_STATUES);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<ItemStatuesRecord> getPrimaryKey() {
        return Keys.ITEM_STATUES_PKEY;
    }

    @Override
    public List<UniqueKey<ItemStatuesRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemStatuesRecord>>asList(Keys.ITEM_STATUES_PKEY);
    }

    @Override
    public List<ForeignKey<ItemStatuesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemStatuesRecord, ?>>asList(Keys.ITEM_STATUES__ITEM_STATUES_ITEM_ID_FKEY, Keys.ITEM_STATUES__ITEM_STATUES_STATUS_ID_FKEY);
    }

    public Items items() {
        return new Items(this, Keys.ITEM_STATUES__ITEM_STATUES_ITEM_ID_FKEY);
    }

    public Statues statues() {
        return new Statues(this, Keys.ITEM_STATUES__ITEM_STATUES_STATUS_ID_FKEY);
    }

    @Override
    public ItemStatues as(String alias) {
        return new ItemStatues(DSL.name(alias), this);
    }

    @Override
    public ItemStatues as(Name alias) {
        return new ItemStatues(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemStatues rename(String name) {
        return new ItemStatues(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemStatues rename(Name name) {
        return new ItemStatues(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, UUID, LocalDateTime, UUID, LocalDateTime, UUID> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
