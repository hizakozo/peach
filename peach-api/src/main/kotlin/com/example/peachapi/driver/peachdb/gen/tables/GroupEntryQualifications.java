/*
 * This file is generated by jOOQ.
 */
package com.example.peachapi.driver.peachdb.gen.tables;


import com.example.peachapi.driver.peachdb.gen.Keys;
import com.example.peachapi.driver.peachdb.gen.Public;
import com.example.peachapi.driver.peachdb.gen.tables.records.GroupEntryQualificationsRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupEntryQualifications extends TableImpl<GroupEntryQualificationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.group_entry_qualifications</code>
     */
    public static final GroupEntryQualifications GROUP_ENTRY_QUALIFICATIONS = new GroupEntryQualifications();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupEntryQualificationsRecord> getRecordType() {
        return GroupEntryQualificationsRecord.class;
    }

    /**
     * The column <code>public.group_entry_qualifications.group_id</code>.
     */
    public final TableField<GroupEntryQualificationsRecord, UUID> GROUP_ID = createField(DSL.name("group_id"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.group_entry_qualifications.invitation_code</code>.
     */
    public final TableField<GroupEntryQualificationsRecord, UUID> INVITATION_CODE = createField(DSL.name("invitation_code"), SQLDataType.UUID.nullable(false), this, "");

    private GroupEntryQualifications(Name alias, Table<GroupEntryQualificationsRecord> aliased) {
        this(alias, aliased, null);
    }

    private GroupEntryQualifications(Name alias, Table<GroupEntryQualificationsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.group_entry_qualifications</code> table reference
     */
    public GroupEntryQualifications(String alias) {
        this(DSL.name(alias), GROUP_ENTRY_QUALIFICATIONS);
    }

    /**
     * Create an aliased <code>public.group_entry_qualifications</code> table reference
     */
    public GroupEntryQualifications(Name alias) {
        this(alias, GROUP_ENTRY_QUALIFICATIONS);
    }

    /**
     * Create a <code>public.group_entry_qualifications</code> table reference
     */
    public GroupEntryQualifications() {
        this(DSL.name("group_entry_qualifications"), null);
    }

    public <O extends Record> GroupEntryQualifications(Table<O> child, ForeignKey<O, GroupEntryQualificationsRecord> key) {
        super(child, key, GROUP_ENTRY_QUALIFICATIONS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<GroupEntryQualificationsRecord> getPrimaryKey() {
        return Keys.GROUP_ENTRY_QUALIFICATIONS_PKEY;
    }

    @Override
    public List<UniqueKey<GroupEntryQualificationsRecord>> getKeys() {
        return Arrays.<UniqueKey<GroupEntryQualificationsRecord>>asList(Keys.GROUP_ENTRY_QUALIFICATIONS_PKEY);
    }

    @Override
    public List<ForeignKey<GroupEntryQualificationsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GroupEntryQualificationsRecord, ?>>asList(Keys.GROUP_ENTRY_QUALIFICATIONS__GROUP_ENTRY_QUALIFICATIONS_GROUP_ID_FKEY);
    }

    public Groups groups() {
        return new Groups(this, Keys.GROUP_ENTRY_QUALIFICATIONS__GROUP_ENTRY_QUALIFICATIONS_GROUP_ID_FKEY);
    }

    @Override
    public GroupEntryQualifications as(String alias) {
        return new GroupEntryQualifications(DSL.name(alias), this);
    }

    @Override
    public GroupEntryQualifications as(Name alias) {
        return new GroupEntryQualifications(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupEntryQualifications rename(String name) {
        return new GroupEntryQualifications(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupEntryQualifications rename(Name name) {
        return new GroupEntryQualifications(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
